# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8,3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-asyncio pytest-cov
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        pytest --cov-report=xml --cov=moonraker_api tests/
    - uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
  publish:
    name: Publish to Github & NPM or Github Package Registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
        python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-asyncio pytest-cov
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - env:
          CI: true
        run: npm ci
      - if: success()
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          PYPI_USER: ${{ secrets.PYPI_USER }}
        run: npx semantic-release
  # publish:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Semantic Release Action
  #       uses: codfish/semantic-release-action@additional-packages
  #       with:
  #         dry_run: True
  #         branches: |
  #           [
  #             '+([0-9])?(.{+([0-9]),x}).x',
  #             'main',
  #             'next',
  #             'next-major',
  #             {
  #               name: 'beta',
  #               prerelease: true
  #             },
  #             {
  #               name: 'alpha',
  #               prerelease: true
  #             }
  #           ]
  #         additional_packages: |
  #           ['semantic-release-pypi']
  #         plugins: |
  #           ['@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', 'semantic-release-pypi', '@semantic-release/github']
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
  #         PYPI_USER: ${{ secrets.PYPI_USER }}
